/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import dao.ProductDao;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Product;

/**
 *
 * @author admin
 */
public final class BanHang extends javax.swing.JPanel {

    /**
     * Creates new form BanHang
     */
    private static int id = 1;
    private int ID;
    private ProductDao productDao = new ProductDao();
    private List<Product> listProduct = new ArrayList<>();
    private List<Product> listSaleProduct = new ArrayList<>();
    int sum = 0;
    
    private final String [] columnNames = new String [] {
            "Mã hàng", "Tên hàng hoá", "Giá"};
    
    private final String [] columnNames1 = new String [] {
            "Mã hàng", "Tên hàng hoá", "Giá", "Số lượng"};
    public BanHang() {
        initComponents();
        addSearchProductListener(new SearchProductListener());
        addProductListener(new AddProductListener());
        deleteProductListener(new DeleteProductListener());
        showDate();
        payProductListener(new PayProductListener());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        comboSearch = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        bill = new javax.swing.JPanel();
        nameMarket = new javax.swing.JLabel();
        tksAndGoodbye = new javax.swing.JLabel();
        day = new javax.swing.JLabel();
        hours = new javax.swing.JLabel();
        xuyetxuyet = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        LbTotal = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        LbProduct = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstProduct = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        quatityProduct = new javax.swing.JSpinner();
        pay = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setPreferredSize(new java.awt.Dimension(525, 402));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        txtSearch.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        comboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo ten", "Theo ma hang hoa" }));

        btnSearch.setBackground(new java.awt.Color(102, 255, 102));
        btnSearch.setText("TÌM KIẾM");
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(comboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        bill.setBackground(new java.awt.Color(204, 255, 204));

        nameMarket.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        nameMarket.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameMarket.setText("VINMART");

        tksAndGoodbye.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        tksAndGoodbye.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tksAndGoodbye.setText("Cảm ơn quý khách và hẹn gặp lại!");

        day.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        day.setText("Ngày:");

        hours.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hours.setText("Giờ:");

        xuyetxuyet.setText("--------------------------------------------------------");

        jLabel6.setText("--------------------------------------------------------");

        LbTotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LbTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LbTotal.setText("TỔNG CỘNG");

        total.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total.setText("0");

        LbProduct.setText("Sản phẩm:");

        lstProduct.setBackground(new java.awt.Color(204, 255, 204));
        jScrollPane2.setViewportView(lstProduct);

        javax.swing.GroupLayout billLayout = new javax.swing.GroupLayout(bill);
        bill.setLayout(billLayout);
        billLayout.setHorizontalGroup(
            billLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nameMarket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tksAndGoodbye, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(billLayout.createSequentialGroup()
                .addGroup(billLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(billLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(billLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(xuyetxuyet, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(billLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(billLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(day, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(hours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(169, 169, 169))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, billLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(LbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9))))
                    .addGroup(billLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(LbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        billLayout.setVerticalGroup(
            billLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(billLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nameMarket, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tksAndGoodbye, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hours)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xuyetxuyet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LbProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(billLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        productTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hàng", "Tên hàng", "Giá", "Số lượng"
            }
        ));
        jScrollPane1.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            productTable.getColumnModel().getColumn(2).setPreferredWidth(30);
            productTable.getColumnModel().getColumn(3).setHeaderValue("Số lượng");
        }

        searchTable.setBackground(new java.awt.Color(255, 204, 204));
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã hàng", "Tên hàng", "Giá"
            }
        ));
        searchTable.setGridColor(new java.awt.Color(0, 204, 153));
        jScrollPane3.setViewportView(searchTable);
        if (searchTable.getColumnModel().getColumnCount() > 0) {
            searchTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            searchTable.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Bảng tìm kiếm");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Bảng sản phẩm đang mua");

        add.setText("ADD");

        pay.setText("Tính tiền");

        delete.setText("DELETE");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Số lượng");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(43, 43, 43))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(quatityProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(35, 35, 35)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE)
                        .addComponent(pay, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127)))
                .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quatityProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
            .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, 575, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    
    public void showListProducts(List<Product> list) 
    {
        // show ở bảng tìm kiếm
        int size = list.size();   
        Object [][] product = new Object[size][3];
        for (int i = 0; i < size; i++) {
            product[i][0] = list.get(i).getMaHang();
            product[i][1] = list.get(i).getName();
            product[i][2] = list.get(i).getPrice();
        }
        searchTable.setModel(new DefaultTableModel(product, columnNames));
    }

    public void showListSaleProducts(List<Product> list) 
    {
        // show ở bảng tìm kiếm
        int size = list.size();   
        Object [][] product = new Object[size][4];
        for (int i = 0; i < size; i++) {
            product[i][0] = list.get(i).getMaHang();
            product[i][1] = list.get(i).getName();
            product[i][2] = list.get(i).getPrice();
            product[i][3] = list.get(i).getQuantity();
        }
        productTable.setModel(new DefaultTableModel(product, columnNames1));
    }
    
    public void addSearchProductListener(ActionListener listener) {
        btnSearch.addActionListener(listener);
    }
    
     public void addProductListener(ActionListener listener) {
        add.addActionListener(listener);
    }
     
     public void deleteProductListener(ActionListener listener) {
        delete.addActionListener(listener);
    }
     
     public void showDate()
    {
        day.setText("Ngày: " + java.time.LocalDate.now().toString());
        day.setFont(new Font("Segoe OI", Font.PLAIN, 14));
        hours.setText("Giờ: " + java.time.LocalTime.now().toString());
        hours.setFont(new Font("Segoe OI", Font.PLAIN, 14));
    }
    
    public void showBill()
    {
        String s = "";
        sum = 0;
        for (int i = 0; i < listSaleProduct.size(); i++)
        {
            sum += listSaleProduct.get(i).getPrice()*listSaleProduct.get(i).getQuantity();
            s += (i + 1) + ". " + listSaleProduct.get(i).getName() + "\n";
            s += "\t" + listSaleProduct.get(i).getPrice() + " x " + listSaleProduct.get(i).getQuantity() + " = " + listSaleProduct.get(i).getPrice()*listSaleProduct.get(i).getQuantity() + "\n";
        }
        total.setText(String.valueOf(sum));
        lstProduct.setText(s);
        lstProduct.setFont(new Font("Segoe OI", Font.PLAIN, 12));

    }
    
    public void payProductListener(ActionListener listener) {
        pay.addActionListener(listener);
    }
    
    public void convertToTxt()
    {
        ID = id;
        String khachHang = "KhachHang" + ID;
        try 
        {
            FileWriter txtKhachHang = new FileWriter(khachHang);
            txtKhachHang.write(nameMarket.getText() + "\n");
            txtKhachHang.write(tksAndGoodbye.getText() + "\n");
            txtKhachHang.write(day.getText() + "\n");
            txtKhachHang.write(hours.getText() + "\n");
            txtKhachHang.write(xuyetxuyet.getText() + "\n");
            txtKhachHang.write(LbProduct.getText() + "\n");
            txtKhachHang.write(lstProduct.getText() + "\n");
            txtKhachHang.write(xuyetxuyet.getText() + "\n");
            txtKhachHang.write(LbTotal.getText()  + "\t"  + total.getText());  
            id = ID;
            id++;
            txtKhachHang.close();
        } catch (IOException e) 
        {
                System.out.println("An error occurred.");
        }
        
    }
    
    public void subQuantity()
    {
        List<Product> productLst = productDao.getListProduct();
        for (int i = 0; i < listSaleProduct.size(); i++)
        {
            for (int j = 0; j < productLst.size(); j++)
            {
                if (listSaleProduct.get(i).getMaHang().equalsIgnoreCase(productLst.get(j).getMaHang()))
                {
                    productLst.get(j).setQuantity(productLst.get(j).getQuantity() - listSaleProduct.get(i).getQuantity());
                    productDao.edit(productLst.get(j));
                    break;
                }
            }
        }
    }
    
    class SearchProductListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            listProduct.clear();
            String type = "";
            String searchTxt = txtSearch.getText();
            if (comboSearch.getSelectedIndex() != -1) {
                    type = comboSearch.getItemAt(comboSearch.getSelectedIndex());
                }
            if (type.equalsIgnoreCase("Theo ten"))
            {
                listProduct = productDao.searchNameProduct(searchTxt);
            }
            else if (type.equalsIgnoreCase("Theo ma hang hoa"))
            {
                listProduct = productDao.searchMaProduct(searchTxt);
            }
            if (listProduct.isEmpty())
                showMessage("Không có sản phẩm nào như vậy!");
            showListProducts(listProduct);   
        }
    }
    
    class AddProductListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            int row = searchTable.getSelectedRow();
            Object s = quatityProduct.getValue();
            int quantity = Integer.parseInt(s.toString());
            if (row >= 0)
            {
                add.setEnabled(true);
                Product product = new Product();
                product.setMaHang(searchTable.getModel().getValueAt(row, 0).toString());
                product.setName(searchTable.getModel().getValueAt(row, 1).toString());
                product.setPrice(Integer.parseInt(searchTable.getModel().getValueAt(row, 2).toString()));
                product.setQuantity(quantity);
                for (int i = 0; i < listSaleProduct.size(); i++)
                {
                    if (listSaleProduct.get(i).getMaHang().equalsIgnoreCase(product.getMaHang()))
                    {
                        listSaleProduct.get(i).setQuantity(listSaleProduct.get(i).getQuantity() + product.getQuantity());
                        break;
                    }
                    else if (i == listSaleProduct.size() - 1)
                    {
                        listSaleProduct.add(product);
                        break;
                    }
                }
                if (listSaleProduct.isEmpty())
                    listSaleProduct.add(product);          
            }
            txtSearch.setText("");
            showListSaleProducts(listSaleProduct);
            showBill();
            quatityProduct.setValue(0);
        }
    }
    
    class DeleteProductListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            int row = productTable.getSelectedRow();
            if (row >= 0)
            {
                delete.setEnabled(true);
                Product product = new Product();
                String maHang = productTable.getModel().getValueAt(row, 0).toString();
                for (int i = 0 ; i < listSaleProduct.size(); i++)
                {
                    if (maHang.equalsIgnoreCase(listSaleProduct.get(i).getMaHang()))
                    {
                        sum -= listSaleProduct.get(i).getPrice();
                        listSaleProduct.remove(i);
                        break;
                    }
                }
            }
            showListSaleProducts(listSaleProduct);
            showBill();
        }
    }
  
    class PayProductListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            showMessage("Bill đang được in!");
            convertToTxt();
            subQuantity();
            DefaultTableModel model = (DefaultTableModel) searchTable.getModel();
            model.setRowCount(0);
            DefaultTableModel model1 = (DefaultTableModel) productTable.getModel();
            model1.setRowCount(0);
            listProduct.clear();
            listSaleProduct.clear();
            showBill();          
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LbProduct;
    private javax.swing.JLabel LbTotal;
    private javax.swing.JButton add;
    private javax.swing.JPanel bill;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> comboSearch;
    private javax.swing.JLabel day;
    private javax.swing.JButton delete;
    private javax.swing.JLabel hours;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane lstProduct;
    private javax.swing.JLabel nameMarket;
    private javax.swing.JButton pay;
    private javax.swing.JTable productTable;
    private javax.swing.JSpinner quatityProduct;
    private javax.swing.JTable searchTable;
    private javax.swing.JLabel tksAndGoodbye;
    private javax.swing.JLabel total;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JLabel xuyetxuyet;
    // End of variables declaration//GEN-END:variables
}
